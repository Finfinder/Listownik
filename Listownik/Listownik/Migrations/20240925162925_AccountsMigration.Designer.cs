// <auto-generated />
using System;
using Listownik.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Listownik.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240925162925_AccountsMigration")]
    partial class AccountsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Listownik.Entities.KategorieEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorie");
                });

            modelBuilder.Entity("Listownik.Entities.ListyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Listy");
                });

            modelBuilder.Entity("Listownik.Entities.WpisListyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Ikona")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<Guid>("KategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ListyEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListyEntityId");

                    b.ToTable("WpisyListy");
                });

            modelBuilder.Entity("Listownik.Entities.WpisListyEntity", b =>
                {
                    b.HasOne("Listownik.Entities.ListyEntity", null)
                        .WithMany("Wpisy")
                        .HasForeignKey("ListyEntityId");
                });

            modelBuilder.Entity("Listownik.Entities.ListyEntity", b =>
                {
                    b.Navigation("Wpisy");
                });
#pragma warning restore 612, 618
        }
    }
}
